<?xml version="1.0"?>
<root>
  <item>
    <q>加固后的apk安装失败?</q>
	<a>是否用原先的签名重新签名了？如果重签了还失败，请告知你们使用的机型和安卓版本，我们复现排查。</a>
  </item>
  
  <item>
    <q>为什么加固后可以通过dex反编译出源码？</q>
	<a>反编译出来的是外壳的源码，原来的app代码是反编译不出来的</a>
  </item>
  
   <item>
    <q>so库只留下了armeabi平台的，不会有兼容性问题吗?</q>
	<a>之前apk有多个abi，但里面的so数量不一样，比如在arm64里，如果有一些so有arm64版本的，app会选择使用arm64下的so， 但是另一些没有，用到这些so时就会崩溃。
如果只保留一个所有so都有的armeabi, 能够兼容其他所有平台，兼容性更好。
</a>
  </item>
    <item>
    <q>加固后，对App有哪些影响？</q>
	<a>加固对App的功能不产生任何影响，文件大小略微增加，对应用性能的影响可以忽略
	</a>
  </item>  
    <item>
    <q>vmp加固后，为什么还能反编译看到类？</q>
	<a>类的关键函数已经处理了，例如lauch activity，关键函数都已经native话，反编译不出来的
	</a>
  </item>  
    <item>
    <q>so没看出加密了？</q>
	<a>so只加固了自研的，以xx..so（挑选一个so）为例，用ida分析，其Exports函数全部为空。未加固前，所有 exports函数都是透明可见的。</a>
  </item>
  <item>
    <q>为什么壳子检测出用的360加固？</q>
	<a>不是360的， 360渠道上限制了只能上架360加固后的app, 为了使我们加固后app能在360上架，我们往asset下加了一个libjiagu.so, 文件大小为0， 让360应用市场认为是360加固，从而可以在360渠道上架
	</a>
  </item>
  <item>
    <q>防模拟器功能</q>
	<a>有些APP（特别是游戏）不允许用户在模拟器中使用，因此需要提供该功能。
强度要求：APP加固后运行在以下模拟器中崩溃或者以接口的形式告知APP检测到了模拟器：海马玩模拟器，逍遥安卓模拟器，靠谱助手安卓模拟器，夜神安卓模拟器，腾讯手游助手，mumu模拟器，雷电模拟器，蓝叠模拟器，iTools模拟器，天天模拟器，51模拟器，新浪手游助手……
</a>
  </item>
  <item>
    <q>Windows端加固工具clienttool</q>
	<a>用于windows系统下的app加固，支持界面模式和命令行模式，下载地址：http://support.dun.163.com/android/api/#_6</a>
  </item>
  <item>
    <q></q>
	<a></a>
  </item>
  <item>
    <q></q>
	<a></a>
  </item>
</root>